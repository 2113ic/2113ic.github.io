---
import DefaultLayout  from '@/layouts/DefaultLayout.astro'
import ToolBar        from '@/components/ToolBar.astro'
import '/public/github-markdown.css';

import { getCollection } from 'astro:content'
import type { CollectionEntry } from 'astro:content'

interface Props {
  entry: CollectionEntry<'posts'>
}

export async function getStaticPaths() {
  const postsEntries = await getCollection('posts')

  return postsEntries.map((entry) => ({
    params: { slug: entry.slug },
    props: { entry },
  }))
}

const { entry } = Astro.props
const { Content } = await entry.render()
const { cover, date, tags } = entry.data
const isDev = import.meta.env.DEV
const coverPath = isDev ? `/public/cover/${cover}` : `/cover/${cover}`
---

<DefaultLayout>
  <ToolBar back />
  <header>
    {coverPath && <img class="cover night" src={coverPath} alt="cover" />}
    <p class="date">{date}</p>
  </header>
  <main>
    <article class="markdown-body"><Content /></article>
    <section class="tags">
      {
        tags.map((tag: string) => <a class="tag">{tag}</a>)
      }
    </section>
  </main>
</DefaultLayout>

<style lang="scss">

  article.markdown-body {
    color: var(--font-color);
    background-color: var(--bg-color);
  }

  .cover {
    width: 100%;
    border-radius: 12px;
  }

  .date {
    text-align: right;
    color: var(--font-subtitle-color);
  }

  .tags {
    margin: 42px 0;
    padding: 24px 0;
    border-top: 1px dashed var(--border-color);
  }

  .tag {
    margin: 8px;
    padding: 6px 12px;
    font-size: 12px;
    text-transform: uppercase;
    background-color: var(--bg-card-color);
    border-radius: 6px;

    &:first-of-type {
      margin-left: 0;
    }
  }
</style>

---
import DefaultLayout  from '@layout/DefaultLayout.astro'
import ToolBar        from '@comp/ToolBar.astro'
import ArticleItem    from '@comp/blog/ArticleItem.astro'
import PaginationBox  from '@comp/blog/PaginationBox.astro'
import { getCollection } from 'astro:content'
import config from '@config'

export async function getStaticPaths({ paginate }) {
  const isNotDraft = ({ data }) => data.isDraft === false
  const posts = await getCollection('posts', isNotDraft)
  const { dateDelimiter, pageSize } = config.blogs
  const delimiter = dateDelimiter || '-'

  const sortedBlogs = posts.sort((a, b) => {
    const dateA = +a.data.date.replaceAll(delimiter, '')
    const dateB = +b.data.date.replaceAll(delimiter, '')

    return dateB - dateA
  })
  return paginate(sortedBlogs, { pageSize })
}

interface Props {
  page: {
    data: {
      data: {
        title: string
        description: string
        publish: string
        date: string
        tags: string[]
        cover: string
      }
      slug: string
    }[],
    url: string,
    total: number,
    size: number,
    currentPage: number,
    lastPage: number
  }
}

const { data, url, total, size, currentPage, lastPage } = Astro.props.page
---

<DefaultLayout>
  <ToolBar />

  <main>
    <article>
      {data.length === 0 && <div class="empty">这里空空如也</div>}
      <ul class="article-list">
        {data.map(({ data, slug }) => <ArticleItem data={data} url={`/posts/${slug}`} />)}
      </ul>
    </article>
    <PaginationBox url={url} total={total} size={size} cur={currentPage} lastPage={lastPage} />
  </main>
</DefaultLayout>

<style>
.article-list {    
  list-style: none;
  padding-left: 0;
  color: var(--primary);
}

.empty {
  text-align: center;
}
</style>

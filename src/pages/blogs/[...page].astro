---
import DefaultLayout  from '@layout/DefaultLayout.astro'
import ToolBar        from '@comp/ToolBar.astro'
import ArticleItem    from '@comp/blog/ArticleItem.astro'
import PaginationBox  from '@comp/blog/PaginationBox.astro'
import { getCollection } from 'astro:content'
import config from '@config'

import type { BlogProps } from '@type/common'
import type { Page } from 'astro'

interface Props {
  page: Page<BlogProps>
}

export async function getStaticPaths({ paginate }) {
  const isProd = import.meta.env.PROD
  const isNotDraft = ({ data }) => isProd ? data.draft === false : true
  const posts = await getCollection('Posts', isNotDraft)
  const { pageSize } = config.blogs

  const sortedBlogs = posts.sort((a, b) => {
    return new Date(b.data.date).getTime() - new Date(a.data.date).getTime()
  })
  return paginate(sortedBlogs, { pageSize })
}

const {
  data,
  url, 
  total, 
  size, 
  currentPage, 
  lastPage 
} = Astro.props.page
---

<DefaultLayout>
  <ToolBar />
  <main>
    <div class="search-box">
      <input type="text" placeholder="请输入">
    </div>
    <article>
      {data.length === 0 && <div class="empty">这里空空如也</div>}
      <ul class="article-list">
        {
          data.map(({ data, slug }) => 
            <ArticleItem
              data={data}
              publish={slug.split('/').at(0)}
              url={`/posts/${slug}`}
            />
          )
        }
      </ul>
    </article>
    <PaginationBox
      url={url}
      total={total}
      size={size}
      cur={currentPage}
      lastPage={lastPage}
    />
  </main>
</DefaultLayout>

<style lang="scss">
section {
  height: 120px;
  border: 1px solid #eee;
}

.search-box input {
  outline: 0;
  max-width: 225px;
  height: 36px;
  padding: 4px 8px;
  border: 1px solid var(--grey-3);
  border-radius: 5px;
  box-sizing: border-box;

  &:focus {
    border: 2px solid var(--primary);
  }
}

.article-list {    
  list-style: none;
  padding-left: 0;
  color: var(--primary);
}

.empty {
  text-align: center;
}
</style>
